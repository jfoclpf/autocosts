/* global jQuery */
!(function ($) { $.timer = function (func, time, autostart) { return this.set = function (func, time, autostart) { if (this.init = !0, typeof func === 'object') { var paramList = ['autostart', 'time']; for (var arg in paramList) void 0 != func[paramList[arg]] && eval(paramList[arg] + ' = func[paramList[arg]]'); func = func.action } return typeof func === 'function' && (this.action = func), isNaN(time) || (this.intervalTime = time), autostart && !this.isActive && (this.isActive = !0, this.setTimer()), this }, this.once = function (t) { var i = this; return isNaN(t) && (t = 0), window.setTimeout(function () { i.action() }, t), this }, this.play = function (t) { return this.isActive || (t ? this.setTimer() : this.setTimer(this.remaining), this.isActive = !0), this }, this.pause = function () { return this.isActive && (this.isActive = !1, this.remaining -= new Date() - this.last, this.clearTimer()), this }, this.stop = function () { return this.isActive = !1, this.remaining = this.intervalTime, this.clearTimer(), this }, this.toggle = function (t) { return this.isActive ? this.pause() : t ? this.play(!0) : this.play(), this }, this.reset = function () { return this.isActive = !1, this.play(!0), this }, this.clearTimer = function () { window.clearTimeout(this.timeoutObject) }, this.setTimer = function (t) { var i = this; typeof this.action === 'function' && (isNaN(t) && (t = this.intervalTime), this.remaining = t, this.last = new Date(), this.clearTimer(), this.timeoutObject = window.setTimeout(function () { i.go() }, t)) }, this.go = function () { this.isActive && (this.action(), this.setTimer()) }, this.init ? new $.timer(func, time, autostart) : (this.set(func, time, autostart), this) } }(jQuery))
